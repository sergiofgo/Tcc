{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { css } from \"../assets/Css/css\";\nimport { Table, Row, Rows, TableWrapper } from 'react-native-table-component';\nimport { LineChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyLineChart = function MyLineChart() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Line Chart\"\n    }), _jsx(LineChart, {\n      data: {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n          data: [20, 45, 28, 80, 99, 43],\n          strokeWidth: 2\n        }]\n      },\n      width: Dimensions.get('window').width - 16,\n      height: 220,\n      chartConfig: {\n        backgroundColor: '#1cc910',\n        backgroundGradientFrom: '#eff3ff',\n        backgroundGradientTo: '#efefef',\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(0, 0, 0, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        }\n      },\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      }\n    })]\n  });\n};\nexport default function Preditor2(_ref) {\n  var route = _ref.route;\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsx(View, {\n          children: _jsx(MyLineChart, {})\n        })\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: 10\n  },\n  header: {\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 16,\n    marginTop: 16\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Button","StyleSheet","SafeAreaView","KeyboardAvoidingView","Dimensions","Picker","TextInput","Platform","ScrollView","css","Table","Row","Rows","TableWrapper","LineChart","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","MyLineChart","children","style","styles","header","data","labels","datasets","strokeWidth","width","get","height","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","length","undefined","borderRadius","marginVertical","Preditor2","_ref","route","flex","container","create","justifyContent","alignItems","textAlign","padding","fontSize","marginTop"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Preditor2.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {View,Text,TouchableOpacity,Button,StyleSheet,SafeAreaView,KeyboardAvoidingView,Dimensions,Picker,TextInput,Platform,ScrollView} from 'react-native';\r\nimport {css} from '../assets/Css/css';\r\nimport {Table,Row,Rows,TableWrapper} from 'react-native-table-component';\r\nimport {LineChart} from 'react-native-chart-kit';\r\n\r\n\r\nconst MyLineChart = () => {\r\n  return (\r\n    <>\r\n      <Text style={styles.header}>Line Chart</Text>\r\n      <LineChart\r\n        data={{\r\n          labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n          datasets: [\r\n            {\r\n              data: [20, 45, 28, 80, 99, 43],\r\n              strokeWidth: 2,\r\n            },\r\n          ],\r\n        }}\r\n        width={Dimensions.get('window').width - 16}\r\n        height={220}\r\n        chartConfig={{\r\n          backgroundColor: '#1cc910',\r\n          backgroundGradientFrom: '#eff3ff',\r\n          backgroundGradientTo: '#efefef',\r\n          decimalPlaces: 2,\r\n          color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16,\r\n          },\r\n        }}\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 16,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function Preditor2 ({route}) {\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <View>\r\n          <MyLineChart />\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    padding: 10,\r\n  },\r\n  header: {\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    padding: 16,\r\n    marginTop: 16,\r\n  },\r\n});\r\n\r\n/*export default function Preditor2 ({route}) {\r\n    const[result,setResult] = useState(route.params?.transf.data[0].val_fuzz)\r\n    const date = [];\r\n    const close = [];\r\n    for(var i = 0; i <route.params?.transf.data[0].tam; i++){\r\n        date.push(route.params?.transf.data[i].data);\r\n    }\r\n    for(var i = 0; i <route.params?.transf.data[0].tam; i++){\r\n        close.push(route.params?.transf.data[i].close);\r\n    }\r\n    const Valores = {\r\n        tableHead : ['Ativo'].concat(date,['Recomendação']),\r\n        tableBody : [route.params?.transf.data[0].ativo].concat(close,[route.params?.transf.data[0].val_fuzz])\r\n    }\r\n    console.log(date);\r\n    console.log(close);\r\n    return (\r\n        <SafeAreaView style = {{flex:1}}>\r\n            <View> <Text>Teste</Text></View>\r\n            <View  style = {{flex:1, padding:10}}>\r\n              <Table borderStyle = {{borderWidth: 1}}>\r\n                        <Row data = {Valores.tableHead} style = {{backgroundColor:'lightgray'}}/>\r\n                        <Row data = {Valores.tableBody} style = {{backgroundColor:'lightgray'}}/>\r\n              </Table>\r\n            </View>\r\n            <View>\r\n                <Text></Text>\r\n              <LineChart\r\n                data = {{\r\n                    labels:{date},\r\n                    datasets:[{data:{close}}],\r\n                }}\r\n                width = {220}\r\n                height = {220}\r\n                //yAxisLAbel = {''}\r\n                chartConfig = {{\r\n                    backgroundGradientFrom: 'skyblue',\r\n                    backgroundGradientTo:'lightblue',\r\n                    decimalPlaces:1, color: (opacity = 1)=> 'rgba(0,0,0,${opacity})',\r\n                }}\r\n                bezier style = {{borderRadius:16}}\r\n            />\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n    \r\n            *}*/"],"mappings":"AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAE/C,SAAQC,GAAG;AACX,SAAQC,KAAK,EAACC,GAAG,EAACC,IAAI,EAACC,YAAY,QAAO,8BAA8B;AACxE,SAAQC,SAAS,QAAO,wBAAwB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,OACED,KAAA,CAAAF,SAAA;IAAAI,QAAA,GACEN,IAAA,CAAClB,IAAI;MAACyB,KAAK,EAAEC,MAAM,CAACC,MAAO;MAAAH,QAAA,EAAC;IAAU,CAAM,CAAC,EAC7CN,IAAA,CAACF,SAAS;MACRY,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;QAChEC,QAAQ,EAAE,CACR;UACEF,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;UAC9BG,WAAW,EAAE;QACf,CAAC;MAEL,CAAE;MACFC,KAAK,EAAE1B,UAAU,CAAC2B,GAAG,CAAC,QAAQ,CAAC,CAACD,KAAK,GAAG,EAAG;MAC3CE,MAAM,EAAE,GAAI;MACZC,WAAW,EAAE;QACXC,eAAe,EAAE,SAAS;QAC1BC,sBAAsB,EAAE,SAAS;QACjCC,oBAAoB,EAAE,SAAS;QAC/BC,aAAa,EAAE,CAAC;QAChBC,KAAK,EAAE,SAAAA,MAAA;UAAA,IAACC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;UAAA,0BAAsBD,OAAO;QAAA,CAAG;QACnDhB,KAAK,EAAE;UACLoB,YAAY,EAAE;QAChB;MACF,CAAE;MACFpB,KAAK,EAAE;QACLqB,cAAc,EAAE,CAAC;QACjBD,YAAY,EAAE;MAChB;IAAE,CACH,CAAC;EAAA,CACF,CAAC;AAEP,CAAC;AAED,eAAe,SAASE,SAASA,CAAAC,IAAA,EAAW;EAAA,IAARC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACvC,OACE/B,IAAA,CAACd,YAAY;IAACqB,KAAK,EAAE;MAACyB,IAAI,EAAE;IAAC,CAAE;IAAA1B,QAAA,EAC7BN,IAAA,CAACR,UAAU;MAAAc,QAAA,EACTN,IAAA,CAACnB,IAAI;QAAC0B,KAAK,EAAEC,MAAM,CAACyB,SAAU;QAAA3B,QAAA,EAC5BN,IAAA,CAACnB,IAAI;UAAAyB,QAAA,EACLN,IAAA,CAACK,WAAW,IAAE;QAAC,CACT;MAAC,CACH;IAAC,CACG;EAAC,CACD,CAAC;AAEnB;AAAC;AAED,IAAMG,MAAM,GAAGvB,UAAU,CAACiD,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTD,IAAI,EAAE,CAAC;IACPd,eAAe,EAAE,OAAO;IACxBiB,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,QAAQ;IACnBC,OAAO,EAAE;EACX,CAAC;EACD7B,MAAM,EAAE;IACN4B,SAAS,EAAE,QAAQ;IACnBE,QAAQ,EAAE,EAAE;IACZD,OAAO,EAAE,EAAE;IACXE,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}