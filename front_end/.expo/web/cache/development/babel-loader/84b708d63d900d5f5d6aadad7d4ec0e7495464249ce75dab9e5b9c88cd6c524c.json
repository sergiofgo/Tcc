{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Teste1() {\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    mydate = _useState2[0],\n    setDate = _useState2[1];\n  var _useState3 = useState('date'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    displaymode = _useState4[0],\n    setMode = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isDisplayDate = _useState6[0],\n    setShow = _useState6[1];\n  var changeSelectedDate = function changeSelectedDate(event, selectedDate) {\n    var currentDate = selectedDate || mydate;\n    setDate(currentDate);\n  };\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n  var displayDatepicker = function displayDatepicker() {\n    showMode('date');\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Button, {\n        onPress: displayDatepicker,\n        title: \"Show date picker!\"\n      })\n    }), isDisplayDate && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: mydate,\n      mode: displaymode,\n      is24Hour: true,\n      display: \"default\",\n      onChange: changeSelectedDate\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","View","Button","Platform","SafeAreaView","StyleSheet","DateTimePicker","jsx","_jsx","jsxs","_jsxs","Teste1","_useState","Date","_useState2","_slicedToArray","mydate","setDate","_useState3","_useState4","displaymode","setMode","_useState5","_useState6","isDisplayDate","setShow","changeSelectedDate","event","selectedDate","currentDate","showMode","currentMode","displayDatepicker","style","styles","container","children","onPress","title","testID","value","mode","is24Hour","display","onChange","create","flex","alignItems","justifyContent"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Teste1.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {View, Button, Platform, SafeAreaView , StyleSheet} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nexport default function Teste1() {\r\n   const [mydate, setDate] = useState(new Date());\r\n   const [displaymode, setMode] = useState('date');\r\n   const [isDisplayDate, setShow] = useState(false);\r\n   const changeSelectedDate = (event, selectedDate) => {\r\n   const currentDate = selectedDate || mydate;\r\n   setDate(currentDate);\r\n};\r\nconst showMode = (currentMode) => {\r\n   setShow(true);\r\n   setMode(currentMode);\r\n};\r\nconst displayDatepicker = () => {\r\n   showMode('date');\r\n};\r\nreturn (\r\n   <SafeAreaView style={styles.container}>\r\n      <View>\r\n         <Button onPress={displayDatepicker} title=\"Show date picker!\" />\r\n            </View>\r\n               {isDisplayDate && (\r\n                  <DateTimePicker\r\n                     testID=\"dateTimePicker\"\r\n                     value={mydate}\r\n                     mode={displaymode}\r\n                     is24Hour={true}\r\n                     display=\"default\"\r\n                     onChange={changeSelectedDate}\r\n            />\r\n         )}\r\n      </SafeAreaView>\r\n   );\r\n};\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n   },\r\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEtC,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACpE,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC9B,IAAAC,SAAA,GAA0BZ,QAAQ,CAAC,IAAIa,IAAI,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAvCI,MAAM,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA+BlB,QAAQ,CAAC,MAAM,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAxCE,WAAW,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAC3B,IAAAG,UAAA,GAAiCtB,QAAQ,CAAC,KAAK,CAAC;IAAAuB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzCE,aAAa,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAC7B,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAK,EAAEC,YAAY,EAAK;IACpD,IAAMC,WAAW,GAAGD,YAAY,IAAIZ,MAAM;IAC1CC,OAAO,CAACY,WAAW,CAAC;EACvB,CAAC;EACD,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,WAAW,EAAK;IAC/BN,OAAO,CAAC,IAAI,CAAC;IACbJ,OAAO,CAACU,WAAW,CAAC;EACvB,CAAC;EACD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC7BF,QAAQ,CAAC,MAAM,CAAC;EACnB,CAAC;EACD,OACGpB,KAAA,CAACN,YAAY;IAAC6B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GACnC5B,IAAA,CAACP,IAAI;MAAAmC,QAAA,EACF5B,IAAA,CAACN,MAAM;QAACmC,OAAO,EAAEL,iBAAkB;QAACM,KAAK,EAAC;MAAmB,CAAE;IAAC,CACvD,CAAC,EACHd,aAAa,IACXhB,IAAA,CAACF,cAAc;MACZiC,MAAM,EAAC,gBAAgB;MACvBC,KAAK,EAAExB,MAAO;MACdyB,IAAI,EAAErB,WAAY;MAClBsB,QAAQ,EAAE,IAAK;MACfC,OAAO,EAAC,SAAS;MACjBC,QAAQ,EAAElB;IAAmB,CACrC,CACH;EAAA,CACU,CAAC;AAErB;AAAC;AACD,IAAMQ,MAAM,GAAG7B,UAAU,CAACwC,MAAM,CAAC;EAC9BV,SAAS,EAAE;IACRW,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACnB;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}