{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Home, Preditor1, Preditor2, Teste1, teste2 } from \"./Views\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        options: {\n          headerShown: false\n        },\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"Preditor1\",\n        options: {\n          headerShown: false\n        },\n        component: Preditor1\n      }), _jsx(Stack.Screen, {\n        name: \"Preditor2\",\n        options: {\n          headerShown: false\n        },\n        component: Preditor2\n      }), _jsx(Stack.Screen, {\n        name: \"Teste1\",\n        options: {\n          headerShown: false\n        },\n        component: Teste1\n      }), _jsx(Stack.Screen, {\n        name: \"Teste2\",\n        options: {\n          headerShown: false\n        },\n        component: Teste2\n      })]\n    })\n  });\n}","map":{"version":3,"names":["useState","useEffect","NavigationContainer","createNativeStackNavigator","Home","Preditor1","Preditor2","Teste1","teste2","jsx","_jsx","jsxs","_jsxs","App","Stack","children","Navigator","Screen","name","options","headerShown","component","Teste2"],"sources":["C:/Users/Lenovo/Desktop/preditor/App.js"],"sourcesContent":["import { StyleSheet, Text, View,Button,TouchableOpacity} from 'react-native';\nimport{useState,useEffect} from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {Home,Preditor1,Preditor2, Teste1,teste2} from './Views';\n\n\nexport default function App() {\n  const Stack = createNativeStackNavigator();\n  return (\n\n      <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" options={{headerShown:false}} component={Home} />\n        <Stack.Screen name=\"Preditor1\" options={{headerShown:false}} component={Preditor1}/>\n        <Stack.Screen name=\"Preditor2\" options={{headerShown:false}} component={Preditor2}/>\n        <Stack.Screen name=\"Teste1\" options={{headerShown:false}} component={Teste1}/>\n        <Stack.Screen name=\"Teste2\" options={{headerShown:false}} component={Teste2}/>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n"],"mappings":";;;;;AACA,SAAOA,QAAQ,EAACC,SAAS,QAAO,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAAQC,IAAI,EAACC,SAAS,EAACC,SAAS,EAAEC,MAAM,EAACC,MAAM;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGhE,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,KAAK,GAAGX,0BAA0B,CAAC,CAAC;EAC1C,OAEIO,IAAA,CAACR,mBAAmB;IAAAa,QAAA,EACpBH,KAAA,CAACE,KAAK,CAACE,SAAS;MAAAD,QAAA,GACdL,IAAA,CAACI,KAAK,CAACG,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,OAAO,EAAE;UAACC,WAAW,EAAC;QAAK,CAAE;QAACC,SAAS,EAAEjB;MAAK,CAAE,CAAC,EAC3EM,IAAA,CAACI,KAAK,CAACG,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,OAAO,EAAE;UAACC,WAAW,EAAC;QAAK,CAAE;QAACC,SAAS,EAAEhB;MAAU,CAAC,CAAC,EACpFK,IAAA,CAACI,KAAK,CAACG,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,OAAO,EAAE;UAACC,WAAW,EAAC;QAAK,CAAE;QAACC,SAAS,EAAEf;MAAU,CAAC,CAAC,EACpFI,IAAA,CAACI,KAAK,CAACG,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAE;UAACC,WAAW,EAAC;QAAK,CAAE;QAACC,SAAS,EAAEd;MAAO,CAAC,CAAC,EAC9EG,IAAA,CAACI,KAAK,CAACG,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAE;UAACC,WAAW,EAAC;QAAK,CAAE;QAACC,SAAS,EAAEC;MAAO,CAAC,CAAC;IAAA,CAC/D;EAAC,CACC,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}