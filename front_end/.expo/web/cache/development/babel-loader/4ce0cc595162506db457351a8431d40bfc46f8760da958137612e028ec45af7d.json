{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isPickerShow = _useState2[0],\n    setIsPickerShow = _useState2[1];\n  var _useState3 = useState(new Date(Date.now())),\n    _useState4 = _slicedToArray(_useState3, 2),\n    date = _useState4[0],\n    setDate = _useState4[1];\n  var showPicker = function showPicker() {\n    setIsPickerShow(true);\n  };\n  var onChange = function onChange(event, value) {\n    setDate(value);\n    if (Platform.OS === 'android') {\n      setIsPickerShow(false);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.pickedDateContainer,\n      children: _jsx(Text, {\n        style: styles.pickedDate,\n        children: date.toUTCString()\n      })\n    }), !isPickerShow && _jsx(View, {\n      style: styles.btnContainer,\n      children: _jsx(Button, {\n        title: \"Show Picker\",\n        color: \"purple\",\n        onPress: showPicker\n      })\n    }), isPickerShow && _jsx(DateTimePicker, {\n      value: date,\n      mode: 'date',\n      display: Platform.OS === 'ios' ? 'spinner' : 'default',\n      is24Hour: true,\n      onChange: onChange,\n      style: styles.datePicker\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n    padding: 30\n  },\n  pickedDateContainer: {\n    padding: 20,\n    backgroundColor: '#eee',\n    borderRadius: 10\n  },\n  pickedDate: {\n    fontSize: 18,\n    color: 'black'\n  },\n  btnContainer: {\n    padding: 30\n  },\n  datePicker: {\n    width: 320,\n    height: 260,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","Button","Platform","DateTimePicker","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isPickerShow","setIsPickerShow","_useState3","Date","now","_useState4","date","setDate","showPicker","onChange","event","value","OS","style","styles","container","children","pickedDateContainer","pickedDate","toUTCString","btnContainer","title","color","onPress","mode","display","is24Hour","datePicker","create","flexDirection","alignItems","flex","justifyContent","padding","backgroundColor","borderRadius","fontSize","width","height"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Teste1.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {StyleSheet, View, Text, Button, Platform} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nconst App = () => {\r\n  const [isPickerShow, setIsPickerShow] = useState(false);\r\n  const [date, setDate] = useState(new Date(Date.now()));\r\n\r\n  const showPicker = () => {\r\n    setIsPickerShow(true);\r\n  };\r\n\r\n  const onChange = (event, value) => {\r\n    setDate(value);\r\n    if (Platform.OS === 'android') {\r\n      setIsPickerShow(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Display the selected date */}\r\n      <View style={styles.pickedDateContainer}>\r\n        <Text style={styles.pickedDate}>{date.toUTCString()}</Text>\r\n      </View>\r\n\r\n      {/* The button that used to trigger the date picker */}\r\n      {!isPickerShow && (\r\n        <View style={styles.btnContainer}>\r\n          <Button title=\"Show Picker\" color=\"purple\" onPress={showPicker} />\r\n        </View>\r\n      )}\r\n\r\n      {/* The date picker */}\r\n      {isPickerShow && (\r\n        <DateTimePicker\r\n          value={date}\r\n          mode={'date'}\r\n          display={Platform.OS === 'ios' ? 'spinner' : 'default'}\r\n          is24Hour={true}\r\n          onChange={onChange}\r\n          style={styles.datePicker}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\n// Kindacode.com\r\n// just add some styles to make our app look more beautiful\r\n// This is not the focus of this article\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 30,\r\n  },\r\n  pickedDateContainer: {\r\n    padding: 20,\r\n    backgroundColor: '#eee',\r\n    borderRadius: 10,\r\n  },\r\n  pickedDate: {\r\n    fontSize: 18,\r\n    color: 'black',\r\n  },\r\n  btnContainer: {\r\n    padding: 30,\r\n  },\r\n  // This only works on iOS\r\n  datePicker: {\r\n    width: 320,\r\n    height: 260,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n  },\r\n});\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}