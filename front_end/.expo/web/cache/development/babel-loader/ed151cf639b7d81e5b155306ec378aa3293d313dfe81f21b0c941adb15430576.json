{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DatePicker from 'react-native-datepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState('09-10-2020'),\n    _useState2 = _slicedToArray(_useState, 2),\n    date = _useState2[0],\n    setDate = _useState2[1];\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"React Native Date Picker \\u2013 To Pick the Date using Native Calendar\"\n      }), _jsx(DatePicker, {\n        style: styles.datePickerStyle,\n        date: date,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"DD-MM-YYYY\",\n        minDate: \"01-01-2016\",\n        maxDate: \"01-01-2019\",\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        customStyles: {\n          dateIcon: {\n            display: 'none',\n            position: 'absolute',\n            left: 0,\n            top: 4,\n            marginLeft: 0\n          },\n          dateInput: {\n            marginLeft: 36\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          setDate(date);\n        }\n      })]\n    })\n  });\n};\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold',\n    padding: 20\n  },\n  datePickerStyle: {\n    width: 200,\n    marginTop: 20\n  }\n});","map":{"version":3,"names":["React","useState","SafeAreaView","StyleSheet","Text","View","DatePicker","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","date","setDate","style","styles","container","children","title","datePickerStyle","mode","placeholder","format","minDate","maxDate","confirmBtnText","cancelBtnText","customStyles","dateIcon","display","position","left","top","marginLeft","dateInput","onDateChange","create","flex","padding","justifyContent","alignItems","textAlign","fontSize","fontWeight","width","marginTop"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Teste1.js"],"sourcesContent":["\r\n// import React in our code\r\nimport React, { useState } from 'react';\r\n\r\n// import all the components we are going to use\r\nimport { SafeAreaView, StyleSheet, Text, View } from 'react-native';\r\n\r\n//import DatePicker from the package we installed\r\nimport DatePicker from 'react-native-datepicker';\r\n\r\nconst App = () => {\r\n  const [date, setDate] = useState('09-10-2020');\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>\r\n          React Native Date Picker â€“ To Pick the Date using Native Calendar\r\n        </Text>\r\n        <DatePicker\r\n          style={styles.datePickerStyle}\r\n          date={date} //initial date from state\r\n          mode=\"date\" //The enum of date, datetime and time\r\n          placeholder=\"select date\"\r\n          format=\"DD-MM-YYYY\"\r\n          minDate=\"01-01-2016\"\r\n          maxDate=\"01-01-2019\"\r\n          confirmBtnText=\"Confirm\"\r\n          cancelBtnText=\"Cancel\"\r\n          customStyles={{\r\n            dateIcon: {\r\n              display: 'none',\r\n              position: 'absolute',\r\n              left: 0,\r\n              top: 4,\r\n              marginLeft: 0,\r\n            },\r\n            dateInput: {\r\n              marginLeft: 36,\r\n            },\r\n          }}\r\n          onDateChange={(date) => {\r\n            setDate(date);\r\n          }}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    padding: 20,\r\n  },\r\n  datePickerStyle: {\r\n    width: 200,\r\n    marginTop: 20,\r\n  },\r\n});"],"mappings":";AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAMxC,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAwBX,QAAQ,CAAC,YAAY,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,OACEL,IAAA,CAACN,YAAY;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EACpCV,KAAA,CAACL,IAAI;MAACY,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,GAC5BZ,IAAA,CAACJ,IAAI;QAACa,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAD,QAAA,EAAC;MAE3B,CAAM,CAAC,EACPZ,IAAA,CAACF,UAAU;QACTW,KAAK,EAAEC,MAAM,CAACI,eAAgB;QAC9BP,IAAI,EAAEA,IAAK;QACXQ,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBC,MAAM,EAAC,YAAY;QACnBC,OAAO,EAAC,YAAY;QACpBC,OAAO,EAAC,YAAY;QACpBC,cAAc,EAAC,SAAS;QACxBC,aAAa,EAAC,QAAQ;QACtBC,YAAY,EAAE;UACZC,QAAQ,EAAE;YACRC,OAAO,EAAE,MAAM;YACfC,QAAQ,EAAE,UAAU;YACpBC,IAAI,EAAE,CAAC;YACPC,GAAG,EAAE,CAAC;YACNC,UAAU,EAAE;UACd,CAAC;UACDC,SAAS,EAAE;YACTD,UAAU,EAAE;UACd;QACF,CAAE;QACFE,YAAY,EAAE,SAAAA,aAACvB,IAAI,EAAK;UACtBC,OAAO,CAACD,IAAI,CAAC;QACf;MAAE,CACH,CAAC;IAAA,CACE;EAAC,CACK,CAAC;AAEnB,CAAC;AAED,eAAeJ,GAAG;AAElB,IAAMO,MAAM,GAAGf,UAAU,CAACoC,MAAM,CAAC;EAC/BpB,SAAS,EAAE;IACTqB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDtB,KAAK,EAAE;IACLuB,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBL,OAAO,EAAE;EACX,CAAC;EACDnB,eAAe,EAAE;IACfyB,KAAK,EAAE,GAAG;IACVC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}