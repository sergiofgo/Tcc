{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Teste1() {\n  var _useState = useState(new Date(1111111155555)),\n    _useState2 = _slicedToArray(_useState, 2),\n    date = _useState2[0],\n    setDate = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    show = _useState4[0],\n    setShow = _useState4[1];\n  var onChange = function onChange(event, selectedDate) {\n    setDate(currentDate);\n  };\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      children: _jsx(Button, {\n        onPress: showDatepicker,\n        title: \"Show date picker!\"\n      })\n    }), show && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: date,\n      mode: mode,\n      is24Hour: true,\n      display: \"default\",\n      onChange: onChange\n    }), \";\"]\n  });\n}","map":{"version":3,"names":["React","useState","View","Button","Platform","Text","DateTimePicker","jsx","_jsx","jsxs","_jsxs","Teste1","_useState","Date","_useState2","_slicedToArray","date","setDate","_useState3","_useState4","show","setShow","onChange","event","selectedDate","currentDate","showDatepicker","showMode","children","onPress","title","testID","value","mode","is24Hour","display"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Teste1.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport {View,Button,Platform,Text} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n  \r\nexport default function Teste1() {\r\n  const[date,setDate] = useState(new Date(1111111155555));\r\n  const[show,setShow] = useState(false);\r\n\r\n  const onChange = (event,selectedDate) => {setDate(currentDate)};\r\n  const showDatepicker = () => {\r\n    showMode('date');\r\n  }\r\n  return (\r\n    <View>\r\n        <View>\r\n            <Button onPress = {showDatepicker} title = 'Show date picker!'/>\r\n        \r\n    </View>\r\n        {show && ( \r\n            <DateTimePicker \r\n                testID = 'dateTimePicker' \r\n                value = {date}\r\n                mode = {mode}\r\n                is24Hour = {true}\r\n                display = \"default\"\r\n                onChange = {onChange}\r\n            />\r\n        )};\r\n        </View>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAEpC,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B,IAAAC,SAAA,GAAsBX,QAAQ,CAAC,IAAIY,IAAI,CAAC,aAAa,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAjDI,IAAI,GAAAF,UAAA;IAACG,OAAO,GAAAH,UAAA;EAClB,IAAAI,UAAA,GAAsBjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,IAAI,GAAAD,UAAA;IAACE,OAAO,GAAAF,UAAA;EAElB,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAACC,YAAY,EAAK;IAACP,OAAO,CAACQ,WAAW,CAAC;EAAA,CAAC;EAC/D,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BC,QAAQ,CAAC,MAAM,CAAC;EAClB,CAAC;EACD,OACEjB,KAAA,CAACR,IAAI;IAAA0B,QAAA,GACDpB,IAAA,CAACN,IAAI;MAAA0B,QAAA,EACDpB,IAAA,CAACL,MAAM;QAAC0B,OAAO,EAAIH,cAAe;QAACI,KAAK,EAAG;MAAmB,CAAC;IAAC,CAElE,CAAC,EACFV,IAAI,IACDZ,IAAA,CAACF,cAAc;MACXyB,MAAM,EAAG,gBAAgB;MACzBC,KAAK,EAAIhB,IAAK;MACdiB,IAAI,EAAIA,IAAK;MACbC,QAAQ,EAAI,IAAK;MACjBC,OAAO,EAAG,SAAS;MACnBb,QAAQ,EAAIA;IAAS,CACxB,CACJ,EAAC,GACF;EAAA,CAAM,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}