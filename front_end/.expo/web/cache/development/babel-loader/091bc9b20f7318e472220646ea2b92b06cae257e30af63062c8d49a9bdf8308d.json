{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { css } from \"../assets/Css/css\";\nimport { Table, Row, Rows, TableWrapper } from 'react-native-table-component';\nimport { LineChart } from 'react-native-chart-kit';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Preditor2(_ref) {\n  var route = _ref.route;\n  var teste = ['January', 'February', 'March', 'April', 'May', 'June'];\n  var date = [];\n  var close = [];\n  for (var i = 0; i < ((_route$params = route.params) == null ? void 0 : _route$params.transf.data[0].tam); i++) {\n    var _route$params, _route$params2;\n    date.push((_route$params2 = route.params) == null ? void 0 : _route$params2.transf.data[i].data);\n  }\n  for (var i = 0; i < ((_route$params3 = route.params) == null ? void 0 : _route$params3.transf.data[0].tam); i++) {\n    var _route$params3, _route$params4;\n    close.push((_route$params4 = route.params) == null ? void 0 : _route$params4.transf.data[i].close);\n  }\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(Text, {\n      children: [date, \" \", close]\n    }), _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.header,\n            children: \"Line Chart\"\n          }), _jsx(LineChart, {\n            data: {\n              labels: date,\n              datasets: [{\n                data: close,\n                strokeWidth: 2\n              }]\n            },\n            width: Dimensions.get('window').width - 16,\n            height: 220,\n            chartConfig: {\n              backgroundColor: '#1cc910',\n              backgroundGradientFrom: '#eff3ff',\n              backgroundGradientTo: '#efefef',\n              decimalPlaces: 2,\n              color: function color() {\n                var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                return \"rgba(0, 0, 0, \" + opacity + \")\";\n              },\n              style: {\n                borderRadius: 16\n              }\n            },\n            style: {\n              marginVertical: 8,\n              borderRadius: 16\n            }\n          })]\n        })\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: 10\n  },\n  header: {\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 16,\n    marginTop: 16\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Button","StyleSheet","SafeAreaView","KeyboardAvoidingView","Dimensions","Picker","TextInput","Platform","ScrollView","css","Table","Row","Rows","TableWrapper","LineChart","jsxs","_jsxs","jsx","_jsx","Preditor2","_ref","route","teste","date","close","i","_route$params","params","transf","data","tam","_route$params2","push","_route$params3","_route$params4","style","flex","children","styles","container","header","labels","datasets","strokeWidth","width","get","height","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","length","undefined","borderRadius","marginVertical","create","justifyContent","alignItems","textAlign","padding","fontSize","marginTop"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Preditor2.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {View,Text,TouchableOpacity,Button,StyleSheet,SafeAreaView,KeyboardAvoidingView,Dimensions,Picker,TextInput,Platform,ScrollView} from 'react-native';\r\nimport {css} from '../assets/Css/css';\r\nimport {Table,Row,Rows,TableWrapper} from 'react-native-table-component';\r\nimport {LineChart} from 'react-native-chart-kit';\r\n\r\nexport default function Preditor2 ({route}) {\r\n    const teste = ['January', 'February', 'March', 'April', 'May', 'June'];\r\n    const date = [];\r\n    const close = [];\r\n    for(var i = 0; i <route.params?.transf.data[0].tam; i++){\r\n        date.push(route.params?.transf.data[i].data);\r\n    }\r\n    for(var i = 0; i <route.params?.transf.data[0].tam; i++){\r\n        close.push(route.params?.transf.data[i].close);\r\n    }\r\n  return (\r\n    <SafeAreaView style={{flex: 1}}>\r\n        <Text>{date} {close}</Text>\r\n      <ScrollView>\r\n        <View style={styles.container}>\r\n          <View>\r\n          <Text style={styles.header}>Line Chart</Text>\r\n      <LineChart\r\n        data={{\r\n          labels: date,\r\n          datasets: [\r\n            {\r\n              data: close,\r\n              strokeWidth: 2,\r\n            },\r\n          ],\r\n        }}\r\n        width={Dimensions.get('window').width - 16}\r\n        height={220}\r\n        chartConfig={{\r\n          backgroundColor: '#1cc910',\r\n          backgroundGradientFrom: '#eff3ff',\r\n          backgroundGradientTo: '#efefef',\r\n          decimalPlaces: 2,\r\n          color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n          style: {\r\n            borderRadius: 16,\r\n          },\r\n        }}\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 16,\r\n        }}\r\n      />\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n/*export default function Preditor2 ({route}) {\r\n    const[result,setResult] = useState(route.params?.transf.data[0].val_fuzz)\r\n    const date = [];\r\n    const close = [];\r\n    for(var i = 0; i <route.params?.transf.data[0].tam; i++){\r\n        date.push(route.params?.transf.data[i].data);\r\n    }\r\n    for(var i = 0; i <route.params?.transf.data[0].tam; i++){\r\n        close.push(route.params?.transf.data[i].close);\r\n    }\r\n    const Valores = {\r\n        tableHead : ['Ativo'].concat(date,['Recomendação']),\r\n        tableBody : [route.params?.transf.data[0].ativo].concat(close,[route.params?.transf.data[0].val_fuzz])\r\n    }\r\n    console.log(date);\r\n    console.log(close);\r\n    return (\r\n        <SafeAreaView style = {{flex:1}}>\r\n            <View> <Text>Teste</Text></View>\r\n            <View  style = {{flex:1, padding:10}}>\r\n              <Table borderStyle = {{borderWidth: 1}}>\r\n                        <Row data = {Valores.tableHead} style = {{backgroundColor:'lightgray'}}/>\r\n                        <Row data = {Valores.tableBody} style = {{backgroundColor:'lightgray'}}/>\r\n              </Table>\r\n            </View>\r\n            <View>\r\n                <Text></Text>\r\n              <LineChart\r\n                data = {{\r\n                    labels:{date},\r\n                    datasets:[{data:{close}}],\r\n                }}\r\n                width = {220}\r\n                height = {220}\r\n                //yAxisLAbel = {''}\r\n                chartConfig = {{\r\n                    backgroundGradientFrom: 'skyblue',\r\n                    backgroundGradientTo:'lightblue',\r\n                    decimalPlaces:1, color: (opacity = 1)=> 'rgba(0,0,0,${opacity})',\r\n                }}\r\n                bezier style = {{borderRadius:16}}\r\n            />\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n    \r\n            *}*/\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n          flex: 1,\r\n          backgroundColor: 'white',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          textAlign: 'center',\r\n          padding: 10,\r\n        },\r\n        header: {\r\n          textAlign: 'center',\r\n          fontSize: 18,\r\n          padding: 16,\r\n          marginTop: 16,\r\n        },\r\n      });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}