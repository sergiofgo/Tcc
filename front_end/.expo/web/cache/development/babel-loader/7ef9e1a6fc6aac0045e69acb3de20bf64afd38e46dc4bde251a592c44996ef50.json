{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { css } from \"../assets/Css/css\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport config from \"../config/config.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Preditor1(props1) {\n  var _useState = useState('none'),\n    _useState2 = _slicedToArray(_useState, 2),\n    display = _useState2[0],\n    setDisplay = _useState2[1];\n  var _useState3 = useState('brazil'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    country = _useState4[0],\n    setCountry = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    stocks = _useState6[0],\n    setStocks = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    date = _useState8[0],\n    setDate = _useState8[1];\n  var _useState9 = useState('oi'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorDate = _useState10[0],\n    setErrorDate = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    vetAcoes = _useState12[0],\n    setvetAcoes = _useState12[1];\n  function bolsa() {\n    return _bolsa.apply(this, arguments);\n  }\n  function _bolsa() {\n    _bolsa = _asyncToGenerator(function* () {\n      var reqs = yield fetch(config.urlRootPhython + 'bolsa/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pais: country\n        })\n      });\n      var resp = yield reqs.json();\n      console.log(resp);\n    });\n    return _bolsa.apply(this, arguments);\n  }\n  return _jsx(SafeAreaView, {\n    style: css.fundo,\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS == 'ios' ? 'padding' : 'height',\n      style: css.fundo,\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          children: stocks\n        })\n      }), _jsxs(View, {\n        style: css.login_form,\n        children: [_jsxs(Picker, {\n          style: {\n            height: 50,\n            width: 180,\n            marginRight: 150\n          },\n          selectedValue: country,\n          onValueChange: function onValueChange(item, itemIndex) {\n            setCountry(item);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"Brasil\",\n            value: \"brazil\"\n          }), _jsx(Picker.Item, {\n            label: \"Estados Unidos\",\n            value: \"usa\"\n          }), _jsx(Picker.Item, {\n            label: \"China\",\n            value: \"^IXIC\"\n          })]\n        }), _jsxs(Picker, {\n          style: {\n            height: 50,\n            width: 400,\n            marginRight: 50\n          },\n          selectedValue: stocks,\n          onValueChange: function onValueChange(item, itemIndex) {\n            setStocks(item);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"Banco do Brasil\",\n            value: \"BBAS3.SA\"\n          }), _jsx(Picker.Item, {\n            label: \"Petrobras\",\n            value: \"PETR4.SA\"\n          }), _jsx(Picker.Item, {\n            label: \"Vale\",\n            value: \"VALE5.SA\"\n          })]\n        })]\n      }), _jsx(View, {\n        children: _jsxs(TouchableOpacity, {\n          title: \"Preditor1\",\n          onPress: props1.navigation.navigate('Preditor2'),\n          style: css.login_button,\n          children: [_jsx(Text, {\n            style: css.login_buttonText,\n            children: \"Preditor2\"\n          }), \" \"]\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Button","SafeAreaView","KeyboardAvoidingView","Picker","TextInput","Platform","css","TextInputMask","config","jsx","_jsx","jsxs","_jsxs","Preditor1","props1","_useState","_useState2","_slicedToArray","display","setDisplay","_useState3","_useState4","country","setCountry","_useState5","_useState6","stocks","setStocks","_useState7","_useState8","date","setDate","_useState9","_useState10","errorDate","setErrorDate","_useState11","_useState12","vetAcoes","setvetAcoes","bolsa","_bolsa","apply","arguments","_asyncToGenerator","reqs","fetch","urlRootPhython","method","headers","body","JSON","stringify","pais","resp","json","console","log","style","fundo","children","behavior","OS","login_form","height","width","marginRight","selectedValue","onValueChange","item","itemIndex","Item","label","value","title","onPress","navigation","navigate","login_button","login_buttonText"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Preditor1.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {View,Text,TouchableOpacity,Button,SafeAreaView,KeyboardAvoidingView,Picker,TextInput,Platform} from 'react-native';\r\nimport {css} from '../assets/Css/css';\r\nimport { TextInputMask } from 'react-native-masked-text';\r\nimport config from \"../config/config.json\";\r\n\r\nexport default function Preditor1 (props1 ) {\r\n    const[display,setDisplay] = useState('none')\r\n    const[country,setCountry] = useState('brazil')\r\n    const[stocks,setStocks] = useState(null)\r\n    const[date,setDate] = useState(null)\r\n    const[errorDate,setErrorDate] = useState('oi')\r\n    const [vetAcoes,setvetAcoes] = useState(null);\r\n    //const next =()=>{props1.navigation.navigate('Preditor2')};\r\n    //const etapa1 = (item) => {setCountry(item);bolsa()}\r\n\r\n    async function bolsa(){\r\n        let reqs = await fetch(config.urlRootPhython +'bolsa/', {method:'POST', headers: {'Accept':'application/json','Content-Type':'application/json'},body: JSON.stringify({pais: country})});\r\n        let resp = await reqs.json();\r\n        //resp.data.map((elem)=>{})\r\n        console.log(resp);\r\n    }\r\n    return (\r\n        <SafeAreaView style = {css.fundo}>\r\n          <KeyboardAvoidingView behavior = {Platform.OS == 'ios'?'padding':'height'} style = {css.fundo}>\r\n            <View>\r\n              <Text >{stocks}</Text>\r\n            </View>\r\n        \r\n            <View style = {css.login_form}>\r\n                <Picker  style={{ height: 50, width: 180,marginRight: 150, }} selectedValue = {country} onValueChange ={(item,itemIndex) => {setCountry(item)}}>\r\n                    <Picker.Item label=\"Brasil\" value=\"brazil\" />\r\n                    <Picker.Item label=\"Estados Unidos\" value=\"usa\" />\r\n                    <Picker.Item label=\"China\" value=\"^IXIC\" />\r\n                </Picker>\r\n                <Picker  style={{ height: 50, width: 400,marginRight: 50 }} selectedValue = {stocks} onValueChange ={(item,itemIndex) =>{setStocks(item)}}>\r\n                    <Picker.Item label=\"Banco do Brasil\" value=\"BBAS3.SA\"/>\r\n                    <Picker.Item label=\"Petrobras\" value=\"PETR4.SA\"  />\t\r\n                    <Picker.Item label=\"Vale\" value=\"VALE5.SA\"/>\r\n                </Picker>\r\n            </View>\r\n            <View>\r\n                <TouchableOpacity title = \"Preditor1\" onPress={props1.navigation.navigate('Preditor2')} style = {css.login_button}><Text style = {css.login_buttonText}>Preditor2</Text> </TouchableOpacity>\r\n            </View>\r\n            </KeyboardAvoidingView>\r\n        </SafeAreaView>\r\n    );\r\n    \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}