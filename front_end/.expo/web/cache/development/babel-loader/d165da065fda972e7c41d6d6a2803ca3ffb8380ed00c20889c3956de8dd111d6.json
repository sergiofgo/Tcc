{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { css } from \"../assets/Css/css\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Teste2(props1) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataDeNiver = _useState2[0],\n    setDataDeNiver = _useState2[1];\n  var _useState3 = useState(new Date()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    date = _useState4[0],\n    setDate = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPicker = _useState6[0],\n    setShowPicker = _useState6[1];\n  var toggleDatepicker = function toggleDatepicker() {\n    setShowPicker(!showPicker);\n  };\n  var onChange = function onChange(_ref, selectedDate) {\n    var type = _ref.type;\n    if (type == 'set') {\n      var currentDate = selectedDate;\n      setDate(currentDate);\n      if (Platform.OS === \"windows\") {\n        toggleDatepicker();\n        setDataDeNiver(currentDate.toDateString());\n      }\n    } else {\n      toggleDatepicker();\n    }\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    keyboardVerticalOffset: 10,\n    children: _jsxs(View, {\n      style: css.fundo,\n      children: [showPicker && _jsx(DateTimePicker, {\n        mode: \"date\",\n        display: \"spinner\",\n        value: date,\n        onChange: onChange\n      }), !showPicker && _jsxs(Pressable, {\n        onPress: toggleDatepicker,\n        children: [\" \", _jsx(TextInput, {\n          placeholder: \"Teste\",\n          value: dataDeNiver,\n          onChangeText: setDataDeNiver,\n          editable: false\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Button","SafeAreaView","Pressable","Platform","KeyboardAvoidingView","css","DateTimePicker","jsx","_jsx","jsxs","_jsxs","Teste2","props1","_useState","_useState2","_slicedToArray","dataDeNiver","setDataDeNiver","_useState3","Date","_useState4","date","setDate","_useState5","_useState6","showPicker","setShowPicker","toggleDatepicker","onChange","_ref","selectedDate","type","currentDate","OS","toDateString","style","flex","behavior","keyboardVerticalOffset","children","fundo","mode","display","value","onPress","TextInput","placeholder","onChangeText","editable"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Teste2.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport {View,Text,TouchableOpacity,Button,SafeAreaView,Pressable, Platform,KeyboardAvoidingView } from 'react-native';\r\nimport {css} from '../assets/Css/css';\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\n\r\n\r\n\r\nexport default function Teste2 (props1) {\r\n    const [dataDeNiver,setDataDeNiver] = useState(\"\");\r\n    const [date,setDate] = useState(new Date());\r\n    const[showPicker,setShowPicker] = useState(false);\r\n    const toggleDatepicker = () => {setShowPicker(!showPicker);};\r\n    const onChange  = ({type},selectedDate) => {if(type =='set'){const currentDate = selectedDate; setDate(currentDate);if(Platform.OS === \"windows\"){toggleDatepicker();setDataDeNiver(currentDate.toDateString())}}else{toggleDatepicker()}};\r\n    return (\r\n        <KeyboardAvoidingView style = {{flex:1}} behavior = {Platform.OS === 'ios'?'padding':'height'} keyboardVerticalOffset = {10}>\r\n            <View style = {css.fundo}>\r\n                {showPicker && (<DateTimePicker mode = 'date' display = 'spinner' value = {date} onChange={onChange}/>)}\r\n                {!showPicker && (<Pressable onPress={toggleDatepicker}> <TextInput placeholder = 'Teste' value = {dataDeNiver} onChangeText={setDataDeNiver} editable = {false} /></Pressable>)}\r\n               \r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    );\r\n    \r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,oBAAA;AAErC,SAAQC,GAAG;AACX,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIpE,eAAe,SAASC,MAAMA,CAAEC,MAAM,EAAE;EACpC,IAAAC,SAAA,GAAqCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,WAAW,GAAAF,UAAA;IAACG,cAAc,GAAAH,UAAA;EACjC,IAAAI,UAAA,GAAuBtB,QAAQ,CAAC,IAAIuB,IAAI,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAL,cAAA,CAAAG,UAAA;IAApCG,IAAI,GAAAD,UAAA;IAACE,OAAO,GAAAF,UAAA;EACnB,IAAAG,UAAA,GAAkC3B,QAAQ,CAAC,KAAK,CAAC;IAAA4B,UAAA,GAAAT,cAAA,CAAAQ,UAAA;IAA3CE,UAAU,GAAAD,UAAA;IAACE,aAAa,GAAAF,UAAA;EAC9B,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAACD,aAAa,CAAC,CAACD,UAAU,CAAC;EAAC,CAAC;EAC5D,IAAMG,QAAQ,GAAI,SAAZA,QAAQA,CAAAC,IAAA,EAAYC,YAAY,EAAK;IAAA,IAAvBC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAoB,IAAGA,IAAI,IAAG,KAAK,EAAC;MAAC,IAAMC,WAAW,GAAGF,YAAY;MAAER,OAAO,CAACU,WAAW,CAAC;MAAC,IAAG7B,QAAQ,CAAC8B,EAAE,KAAK,SAAS,EAAC;QAACN,gBAAgB,CAAC,CAAC;QAACV,cAAc,CAACe,WAAW,CAACE,YAAY,CAAC,CAAC,CAAC;MAAA;IAAC,CAAC,MAAI;MAACP,gBAAgB,CAAC,CAAC;IAAA;EAAC,CAAC;EAC1O,OACInB,IAAA,CAACJ,oBAAoB;IAAC+B,KAAK,EAAI;MAACC,IAAI,EAAC;IAAC,CAAE;IAACC,QAAQ,EAAIlC,QAAQ,CAAC8B,EAAE,KAAK,KAAK,GAAC,SAAS,GAAC,QAAS;IAACK,sBAAsB,EAAI,EAAG;IAAAC,QAAA,EACxH7B,KAAA,CAACb,IAAI;MAACsC,KAAK,EAAI9B,GAAG,CAACmC,KAAM;MAAAD,QAAA,GACpBd,UAAU,IAAKjB,IAAA,CAACF,cAAc;QAACmC,IAAI,EAAG,MAAM;QAACC,OAAO,EAAG,SAAS;QAACC,KAAK,EAAItB,IAAK;QAACO,QAAQ,EAAEA;MAAS,CAAC,CAAE,EACtG,CAACH,UAAU,IAAKf,KAAA,CAACR,SAAS;QAAC0C,OAAO,EAAEjB,gBAAiB;QAAAY,QAAA,GAAC,GAAC,EAAA/B,IAAA,CAACqC,SAAS;UAACC,WAAW,EAAG,OAAO;UAACH,KAAK,EAAI3B,WAAY;UAAC+B,YAAY,EAAE9B,cAAe;UAAC+B,QAAQ,EAAI;QAAM,CAAE,CAAC;MAAA,CAAW,CAAE;IAAA,CAE7K;EAAC,CACW,CAAC;AAG/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}