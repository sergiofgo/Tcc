{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { css } from \"../assets/Css/css\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport config from \"../config/config.json\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Preditor1(props) {\n  var _useState = useState(\"^BVSP\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    bolsas = _useState2[0],\n    setBolsas = _useState2[1];\n  var _useState3 = useState('ABCB4.SA'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    acao = _useState4[0],\n    setAcao = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    transf = _useState6[0],\n    setTransf = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    vetAcoes = _useState8[0],\n    setVetAcoes = _useState8[1];\n  useEffect(function () {\n    bolsa();\n  }, [bolsas]);\n  useEffect(function () {\n    resultado1();\n  }, [acao]);\n  function bolsa() {\n    return _bolsa.apply(this, arguments);\n  }\n  function _bolsa() {\n    _bolsa = _asyncToGenerator(function* () {\n      var reqs = yield fetch(config.urlRootPhython + 'bolsa/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          bag: bolsas\n        })\n      });\n      var resp = yield reqs.json();\n      setVetAcoes(resp.data);\n    });\n    return _bolsa.apply(this, arguments);\n  }\n  function resultado1() {\n    return _resultado.apply(this, arguments);\n  }\n  function _resultado() {\n    _resultado = _asyncToGenerator(function* () {\n      var reqs = yield fetch(config.urlRootPhython + 'resultado1/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          stock: acao,\n          bag: bolsas\n        })\n      });\n      var resp = yield reqs.json();\n      setTransf(resp);\n    });\n    return _resultado.apply(this, arguments);\n  }\n  return _jsx(SafeAreaView, {\n    style: css.fundo,\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS == 'ios' ? 'padding' : 'height',\n      style: css.fundo,\n      children: [_jsx(Text, {\n        children: acao\n      }), _jsxs(View, {\n        style: css.login_form,\n        children: [_jsxs(Picker, {\n          style: css.pick1,\n          selectedValue: bolsas,\n          onValueChange: function onValueChange(item, itemIndex) {\n            setBolsas(item);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"B3\",\n            value: \"^BVSP\"\n          }), _jsx(Picker.Item, {\n            label: \"Bolsa de Nova York\",\n            value: \"^NYA\"\n          }), _jsx(Picker.Item, {\n            label: \"NASDAQ\",\n            value: \"^IXIC\"\n          })]\n        }), _jsx(Picker, {\n          style: css.pick2,\n          selectedValue: acao,\n          onValueChange: function onValueChange(item, itemIndex) {\n            setAcao(item);\n          },\n          children: vetAcoes && vetAcoes.map(function (item, index) {\n            return _jsx(Picker.Item, {\n              label: item.full_name,\n              value: item.symbol\n            });\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsxs(TouchableOpacity, {\n          title: \"Preditor1\",\n          onPress: function onPress() {\n            props.navigation.navigate('Preditor2', {\n              transf: transf\n            });\n          },\n          style: css.login_button,\n          children: [_jsx(Text, {\n            style: css.login_buttonText,\n            children: \"Preditor2\"\n          }), \" \"]\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Button","SafeAreaView","KeyboardAvoidingView","Picker","TextInput","Platform","ScrollView","css","TextInputMask","config","jsx","_jsx","jsxs","_jsxs","Preditor1","props","_useState","_useState2","_slicedToArray","bolsas","setBolsas","_useState3","_useState4","acao","setAcao","_useState5","_useState6","transf","setTransf","_useState7","_useState8","vetAcoes","setVetAcoes","bolsa","resultado1","_bolsa","apply","arguments","_asyncToGenerator","reqs","fetch","urlRootPhython","method","headers","body","JSON","stringify","bag","resp","json","data","_resultado","stock","style","fundo","children","behavior","OS","login_form","pick1","selectedValue","onValueChange","item","itemIndex","Item","label","value","pick2","map","index","full_name","symbol","title","onPress","navigation","navigate","login_button","login_buttonText"],"sources":["C:/Users/Lenovo/Desktop/TCC/TCC_Codigo/front_end/Views/Preditor1.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {View,Text,TouchableOpacity,Button,SafeAreaView,KeyboardAvoidingView,Picker,TextInput,Platform,ScrollView} from 'react-native';\r\nimport {css} from '../assets/Css/css';\r\nimport { TextInputMask } from 'react-native-masked-text';\r\nimport config from \"../config/config.json\";\r\n\r\nexport default function Preditor1 (props ) {\r\n    const[bolsas,setBolsas] = useState(\"^BVSP\" )\r\n    const[acao,setAcao] = useState('ABCB4.SA')\r\n    const[transf,setTransf] = useState(null)\r\n    const [vetAcoes,setVetAcoes] = useState(null);\r\n    useEffect(()=>{bolsa();},[bolsas]);\r\n    useEffect(()=>{resultado1();},[acao])\r\n    async function bolsa(){\r\n        let reqs = await fetch(config.urlRootPhython +'bolsa/', {method:'POST', headers: {'Accept':'application/json','Content-Type':'application/json'},body: JSON.stringify({bag: bolsas})});\r\n        let resp = await reqs.json();\r\n        setVetAcoes(resp.data);\r\n    }\r\n    async function resultado1(){\r\n        let reqs = await fetch(config.urlRootPhython +'resultado1/', {method:'POST', headers: {'Accept':'application/json','Content-Type':'application/json'},body: JSON.stringify({stock: acao, bag: bolsas})});\r\n        let resp = await reqs.json();\r\n        setTransf(resp);\r\n    }\r\n    return (\r\n        <SafeAreaView style = {css.fundo}>\r\n          <KeyboardAvoidingView behavior = {Platform.OS == 'ios'?'padding':'height'} style = {css.fundo}>\r\n            <Text>{acao}</Text>\r\n            <View style = {css.login_form}>\r\n                <Picker  style={css.pick1} selectedValue = {bolsas} onValueChange ={(item,itemIndex) => {setBolsas(item)}}>   \r\n                    <Picker.Item label=\"B3\" value=\"^BVSP\" />\r\n                    <Picker.Item label=\"Bolsa de Nova York\" value=\"^NYA\" />\r\n                    <Picker.Item label=\"NASDAQ\" value=\"^IXIC\" />\r\n                </Picker>\r\n                <Picker  style={css.pick2} selectedValue = {acao} onValueChange ={(item,itemIndex) =>{setAcao(item)}}>\r\n                    { vetAcoes && (vetAcoes.map((item,index)=><Picker.Item label = {item.full_name} value = {item.symbol}/>))}\r\n                </Picker>\r\n            </View>\r\n            <View>\r\n                <TouchableOpacity title = \"Preditor1\"  onPress={()=>{props.navigation.navigate('Preditor2',{transf})}} style = {css.login_button}><Text style = {css.login_buttonText}>Preditor2</Text> </TouchableOpacity>\r\n            </View>\r\n            </KeyboardAvoidingView>\r\n        </SafeAreaView>\r\n    );   \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}