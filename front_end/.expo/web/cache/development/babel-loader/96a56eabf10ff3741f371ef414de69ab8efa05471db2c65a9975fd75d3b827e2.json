{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { css } from \"../assets/Css/css\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _useState = useState(\"\"),\n  _useState2 = _slicedToArray(_useState, 2),\n  dataDeNiver = _useState2[0],\n  setDataDeNiver = _useState2[1];\nvar _useState3 = useState(new Date()),\n  _useState4 = _slicedToArray(_useState3, 2),\n  date = _useState4[0],\n  setDate = _useState4[1];\nvar _useState5 = useState(false),\n  _useState6 = _slicedToArray(_useState5, 2),\n  showPicker = _useState6[0],\n  setShowPicker = _useState6[1];\nvar toggleDatepicker = function toggleDatepicker() {\n  setShowPicker(!showPicker);\n};\nvar onChange = function onChange(_ref, selectedDate) {\n  var type = _ref.type;\n  if (type == 'set') {\n    var currentDate = selectedDate;\n    setDate(currentDate);\n  } else {\n    toggleDatepicker();\n  }\n};\nexport default function Teste2(props1) {\n  return _jsxs(View, {\n    children: [showPicker && _jsx(DateTimePicker, {\n      mode: \"date\",\n      display: \"spinner\",\n      value: date,\n      onChange: onChange\n    }), _jsx(TextInput, {\n      placeholder: \"Teste\",\n      value: dataDeNiver,\n      onChangeText: setDataDeNiver\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Button","SafeAreaView","css","DateTimePicker","jsx","_jsx","jsxs","_jsxs","_useState","_useState2","_slicedToArray","dataDeNiver","setDataDeNiver","_useState3","Date","_useState4","date","setDate","_useState5","_useState6","showPicker","setShowPicker","toggleDatepicker","onChange","_ref","selectedDate","type","currentDate","Teste2","props1","children","mode","display","value","TextInput","placeholder","onChangeText"],"sources":["C:/Users/Lenovo/Desktop/preditor/Views/Teste2.js"],"sourcesContent":["import React,{useState} from 'react';\r\nimport {View,Text,TouchableOpacity,Button,SafeAreaView} from 'react-native';\r\nimport {css} from '../assets/Css/css';\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nconst [dataDeNiver,setDataDeNiver] = useState(\"\");\r\nconst [date,setDate] = useState(new Date());\r\nconst[showPicker,setShowPicker] = useState(false);\r\nconst toggleDatepicker = () => {setShowPicker(!showPicker);};\r\nconst onChange  = ({type},selectedDate) => {if(type =='set'){const currentDate = selectedDate; setDate(currentDate);}else{toggleDatepicker()}};\r\n\r\n\r\nexport default function Teste2 (props1) {\r\n   \r\n    return (\r\n            <View>\r\n                {showPicker && (<DateTimePicker mode = 'date' display = 'spinner' value = {date} onChange={onChange}/>)}\r\n                <TextInput placeholder = 'Teste' value = {dataDeNiver} onChangeText={setDataDeNiver} />\r\n               \r\n            </View>\r\n    );\r\n    \r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,YAAA;AAErC,SAAQC,GAAG;AACX,OAAOC,cAAc,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACpE,IAAAC,SAAA,GAAqCZ,QAAQ,CAAC,EAAE,CAAC;EAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;EAA1CG,WAAW,GAAAF,UAAA;EAACG,cAAc,GAAAH,UAAA;AACjC,IAAAI,UAAA,GAAuBjB,QAAQ,CAAC,IAAIkB,IAAI,CAAC,CAAC,CAAC;EAAAC,UAAA,GAAAL,cAAA,CAAAG,UAAA;EAApCG,IAAI,GAAAD,UAAA;EAACE,OAAO,GAAAF,UAAA;AACnB,IAAAG,UAAA,GAAkCtB,QAAQ,CAAC,KAAK,CAAC;EAAAuB,UAAA,GAAAT,cAAA,CAAAQ,UAAA;EAA3CE,UAAU,GAAAD,UAAA;EAACE,aAAa,GAAAF,UAAA;AAC9B,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAACD,aAAa,CAAC,CAACD,UAAU,CAAC;AAAC,CAAC;AAC5D,IAAMG,QAAQ,GAAI,SAAZA,QAAQA,CAAAC,IAAA,EAAYC,YAAY,EAAK;EAAA,IAAvBC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EAAoB,IAAGA,IAAI,IAAG,KAAK,EAAC;IAAC,IAAMC,WAAW,GAAGF,YAAY;IAAER,OAAO,CAACU,WAAW,CAAC;EAAC,CAAC,MAAI;IAACL,gBAAgB,CAAC,CAAC;EAAA;AAAC,CAAC;AAG9I,eAAe,SAASM,MAAMA,CAAEC,MAAM,EAAE;EAEpC,OACQtB,KAAA,CAACV,IAAI;IAAAiC,QAAA,GACAV,UAAU,IAAKf,IAAA,CAACF,cAAc;MAAC4B,IAAI,EAAG,MAAM;MAACC,OAAO,EAAG,SAAS;MAACC,KAAK,EAAIjB,IAAK;MAACO,QAAQ,EAAEA;IAAS,CAAC,CAAE,EACvGlB,IAAA,CAAC6B,SAAS;MAACC,WAAW,EAAG,OAAO;MAACF,KAAK,EAAItB,WAAY;MAACyB,YAAY,EAAExB;IAAe,CAAE,CAAC;EAAA,CAErF,CAAC;AAGnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}